{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 create database emp;\
use database emp;\
\
create or replace table candidate_information(\
name varchar not null,\
contact_info int,\
emp_id int NOT NULL,\
wipro_email varchar,\
primary key(emp_id));\
\
DESCRIBE TABLE candidate_information;\
\
insert into candidate_information values('Ad', 09876, 123, 'a.d@wipro.com'),\
('AM', 08766, 124, 'a.m@wipro.com'),\
('tr', 07654, 125, 't.r@wipro.com'),\
('gk', 54362, 127, 'g.k@wipro.com'),\
('fl', 83756, 129, 'f.l@wipro.com'),\
('fd', 64754, 130, 'f.d@wipro.com'),\
('ds', 87463, 131, 'd.s@wipro.com'),\
('tu', 93746, 132, 't.u@wipro.com'),\
('vj', 75643, 126, 'v.j@wipro.com'),\
('hg', 64532, 128, 'h.g@wipro.com');\
\
select * from candidate_information;\
\
create or replace table skills_info(\
emp_id int,\
skill1 varchar not null,\
skill2 varchar not null, \
certification varchar,\
FOREIGN KEY (emp_id) REFERENCES candidate_information(emp_id));\
\
insert into skills_info values(123, 'sql', 'python', 'aws'),\
(124, 'java', 'c', 'azure'),\
(125, 'sql', 'pyhton', 'gcp'),\
(126, 'c++', 'R', 'azure'),\
(127, 'sql', 'python', 'aws'),\
(128, 'sql', 'python', 'aws'),\
(129, 'java', 'c', 'gcp'),\
(130, 'java', 'c', 'gcp'),\
(131, 'sql', 'python', 'aws'),\
(132,'c++', 'R', 'azure' );\
\
\
select* from skills_info;\
\
\
\
create or replace table location(\
emp_id int, \
office_location varchar,\
FOREIGN KEY (emp_id) REFERENCES candidate_information(emp_id));\
\
insert into location values(123, 'gurgaon'), \
(124, 'gurgaon'),\
(125, 'greater noida'),\
(126, 'delhi'),\
(127, 'gurgaon'),\
(128, 'gurgaon'),\
(129, 'banglore'),\
(130, 'hyderabad'),\
(131,  'pune'),\
(132, 'pune');\
\
truncate location;\
\
select * from location;\
\
\
create or replace table final_records as\
select candidate_information.name, candidate_information.emp_id, candidate_information.wipro_email, candidate_information.contact_info, skills_info.skill1, skills_info.skill2, skills_info.certification, location.office_location from candidate_information \
inner join skills_info on candidate_information.emp_id = skills_info.emp_id \
inner join location on candidate_information.emp_id = location.emp_id;\
\
select * from final_records;\
\
alter table final_records\
add proposed_opportunity varchar;\
\
select * from final_records \
where skill1 = 'sql' or skill2= 'python' ;\
update final_records set proposed_opportunity = 'blackstone' where emp_id = 123 or emp_id = 125 or emp_id = 127 or emp_id = 128 or emp_id = 131 ;\
\
select * from final_records;\
\
create table training_records as\
select emp_id, name, contact_info, wipro_email, proposed_opportunity from final_records where proposed_opportunity = 'blackstone' ;\
\
select * from training_records;\
\
\
alter table training_records \
add column project_start_date date,\
training_status varchar,\
final_selection_status varchar;\
\
update training_records set project_start_date = '2022-06-7';\
update training_records set training_status = 'ongoing';\
update training_records set training_status = 'completed'  where emp_id = 123 or emp_id = 125; -- where emp_id = 123 or emp_id = 126 or emp_id = 123 ;\
\
alter table training_records\
drop column final_selection_status ;\
\
update training_records set final_selection_status  = 'selected' where emp_id = 123 or emp_id = 125;\
\
SELECT name, emp_id,\
CASE WHEN training_status = 'completed' THEN 'interview date to be fixed'\
ELSE 'training ongoing'\
END AS newcol\
FROM training_records;\
\
\
\
--stored procedure- \
\
--backupdatabase\
\
\
\
\
select * from training_records; \
\
\
create or replace table training_completed as \
select name, emp_id, wipro_email, contact_info from training_records where training_status = 'completed';\
\
\
select * from training_completed;\
\
\
--null and not null\
select * from final_records\
where proposed_opportunity is null; \
\
select * from final_records \
where proposed_opportunity is not null;\
\
select * from final_records;\
\
select top 2 * from final_records where proposed_opportunity = 'blackstone';\
select * from final_records limit 3; \
\
select * from final_records order by emp_id desc limit 5;\
select * from final_records order by emp_id asc limit 5;\
\
SELECT * FROM final_records\
WHERE office_location LIKE 'gu%';\
}